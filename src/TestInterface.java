/**
 * 接口（英文：Interface），在JAVA编程语言中是一个抽象类型，是抽象方法的集合，接口通常以interface来声明。一个类通过继承接口的方式，从而来继承接口的抽象方法。
 接口并不是类，编写接口的方式和类很相似，但是它们属于不同的概念。类描述对象的属性和方法。接口则包含类要实现的方法。
 除非实现接口的类是抽象类，否则该类要定义接口中的所有方法。
 接口无法被实例化，但是可以被实现。一个实现接口的类，必须实现接口内所描述的所有方法，否则就必须声明为抽象类。另外，在Java中，接口类型可用来声明一个变量，他们可以成为一个空指针，或是被绑定在一个以此接口实现的对象。
 接口与类相似点：
 一个接口可以有多个方法。
 接口文件保存在.java结尾的文件中，文件名使用接口名。
 接口的字节码文件保存在.class结尾的文件中。
 接口相应的字节码文件必须在与包名称相匹配的目录结构中。 接口与类的区别：
 接口不能用于实例化对象。
 接口没有构造方法。
 接口中所有的方法必须是抽象方法。
 接口不能包含成员变量，除了static和final变量。
 接口不是被类继承了，而是要被类实现。
 接口支持多重继承

 接口有以下特性：
 接口是隐式抽象的，当声明一个接口的时候，不必使用abstract关键字。
 接口中每一个方法也是隐式抽象的，声明时同样不需要abstract关键子。
 接口中的方法都是公有的。

 */
interface Animal2
{
    public void eat();
    public void travel();
}

public class TestInterface implements Animal2{

    public void eat()
    {
        System.out.println("eat");
    }

    public void travel()
    {
        System.out.println("travel");
    }
}

//一个实现接口的类，必须实现接口内所描述的所有方法，否则就必须声明为抽象类
abstract class Test implements Animal2
{

}
